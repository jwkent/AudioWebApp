@page "/life-of-christ"
@using AudioWebApp.Client.Services
@using AudioWebApp.Client.Utilities
@using AudioWebApp.Client.Models
@inject NavigationManager NavigationManager
@inject SharedDataService sharedDataService
@inject ApiService apiService
@inject CollectionFilter collectionFilter
<PageTitle>Life of Christ</PageTitle>
<div>
    <MudCardContent>

        @if (dataReady == null)
        {
            <MudPaper Class="d-flex justify-center align-center" Elevation="0" Height="100vh">
                <MudProgressCircular Style="color:#5F76A6; " Indeterminate="true" />
            </MudPaper>
        }
        else
        {
            <MudPaper Elevation="0">
                <MudList Clickable="true">
                    @foreach (var topic in collectionFilter.SeriesItems)
                    {
                        <MudListItem Text="@topic.Name">
                            <ChildContent>
                                <MudStack Row="true">
                                    <a class="topicNameText">@topic.Name</a>
                                    <a class="topicMessageCountText">@topic.Messages.Count()</a>
                                </MudStack>
                            </ChildContent>
                            <NestedList>
                                @foreach (var msg in topic.Messages)
                                {
                                    <MudListItem Text="@msg.Name" @onclick="(e) => OpenAudio(msg.Name, msg.Link, topic.Server, topic.Messages)" />
                                }
                            </NestedList>
                        </MudListItem>
                    }
                </MudList>
            </MudPaper>
        }
    </MudCardContent>
</div>
@code {
    string? dataReady;

    protected override async Task OnInitializedAsync()
    {
        await apiService.LoadData();
        collectionFilter.Reorder(apiService.Christ);
        dataReady = "dataLoaded";
    }

    public void OpenAudio(string audioName, string audioLink, string serverName, List<Message> queue)
    {
        string serverPath = sharedDataService.GetServerPath(apiService.Servers, serverName);

        sharedDataService.AudioTitle = audioName;
        sharedDataService.AudioLink = Path.Combine(serverPath, audioLink);
        sharedDataService.AudioSeries = "LifeOfChrist";
        sharedDataService.GenerateQueue(queue, audioName, serverPath);
        sharedDataService.TogglePlayer();
    }
}
