@page "/radio"
@using System.Threading.Channels
@inject IDialogService DialogService
@inject IJSRuntime jsRuntime
@inject NavigationManager NavigationManager
@implements IDisposable

<PageTitle>Radio</PageTitle>
<div>
<MudCardContent class="radio-container">
    <MudPaper Class="d-flex justify-center align-center pt-4 px-1" Elevation="0" >
        <p class="lead">The Narrow Path is Broadcast Live</p> 
    </MudPaper>
    <MudPaper Class="d-flex justify-center align-center py-0 px-1 pb-4" Elevation="0" >
        <p> Weekdays from 2:00 P.M. - 3:00 P.M. PT</p>
    </MudPaper>
    <MudPaper Class="d-flex justifiy-center align-center " style="padding-right:8px;" Elevation="0">
            <MudImage Src="./images/steve_gregg_20240328.png" />
    </MudPaper>
    <MudPaper Class="d-flex justify-center align-center " Elevation="0" >
            <MudButton Variant="Variant.Filled" Class="rounded-circle pa-6" style="background-color:#008537" OnClick="@((e) => OpenDialog())">
            <MudIcon Icon="@Icons.Material.Filled.Phone" Size="Size.Medium" ></MudIcon>
        </MudButton>
    </MudPaper>
    <MudPaper Class="d-flex justify-center align-center" style="padding-top:30px;" Elevation="0" >
        <MudButtonGroup Size="Size.Large"  Variant="Variant.Filled">

                <MudButton Style="color:#d8e6fe;" Href="https://podcasts.apple.com/us/podcast/the-narrow-path-radio-program-1-hour/id171641936" Target="_blank">Podcast</MudButton>
                @if (@IsLive)
                {
                    <MudBadge id="livebadge" Color="@Color" Origin="@Origin" Overlap="@Overlap" Dot="@Dot">
                        <MudButton Style="color:#00c853;"  Href="https://22963.live.streamtheworld.com/KPDQAM_SC" Target="_blank">
                            <span class="mud-button-label" style="padding-bottom:5px;">Live</span>
                            </MudButton>
                    </MudBadge>
                }
                else{
                    <MudButton Style="color:#d8E6Fe;" Href="https://22963.live.streamtheworld.com/KPDQAM_SC" Target="_blank">Radio</MudButton>
                }

                <MudButton Style="color:#d8E6Fe;" Href="https://www.matthew713.com/search" Target="_blank" StartIcon="@Icons.Material.Filled.Search" >Search</MudButton>
        </MudButtonGroup>
    </MudPaper>  
    <MudPaper Class="d-flex flex-grow-1 justify-center" Elevation="0">
            <p class="radioDisclaimerText">@radioDisclaimer</p>
    </MudPaper>
</MudCardContent>
</div>
@code{
    private Origin Origin { get; set; } = Origin.BottomCenter;
    private Color Color = Color.Success;
    private bool Dot { get; set; } = true;
    private bool Overlap { get; set; } = true;

    private bool IsLive { get; set; }
    private Timer timer { get; set; }

    string radioDisclaimer = "Please note that any advertising you encounter within this streaming service is not promoted by the Narrow Path or this application. Neither the Narrow Path nor this application benefits financially from any such advertisements.";
    DialogOptions dialogOptions = new DialogOptions()
        {
            DisableBackdropClick = true,
            MaxWidth = MaxWidth.Medium,
            FullWidth = true
        }; 
    private void OpenDialog()
    {
        DialogService.Show<CallDialog>("Call into radio program", dialogOptions);
    }

    protected override async Task OnInitializedAsync()
    {
        await StartIsLiveCheck();
    }

    void IDisposable.Dispose()
    {
        timer.Dispose();
    }
    private async Task StartIsLiveCheck()
    {
        DateTime now = DateTime.Now;
        Console.WriteLine($"Start at: {now}");

        await Task.Delay(TimeSpan.Zero);

        timer = new System.Threading.Timer(async (e) =>
        {
            DateTime now2 = DateTime.Now; 
            Console.WriteLine($"Checking at: {now2}");
            IsLive = await jsRuntime.InvokeAsync<bool>("GetLiveTime");
            Console.WriteLine($"The Show is on: {IsLive}");
            StateHasChanged();
            
        }, null, TimeSpan.Zero, TimeSpan.FromMinutes(2));
    }

}
