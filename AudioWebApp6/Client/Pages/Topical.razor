@page "/topical"
@using AudioWebApp.Client.Services
@using AudioWebApp.Client.Models
@using System.Collections.ObjectModel
@inject NavigationManager NavigationManager
@inject SharedDataService sharedDataService
@inject ApiService apiService
@inject CompletedService completedService

<PageTitle>Topical</PageTitle>
<div>
    <MudCardContent>
        
        @if (dataReady == null)
        {
            <MudPaper Class="d-flex justify-center align-center" Elevation="0" Height="100vh">
                <MudProgressCircular Style="color:#5F76A6; " Indeterminate="true" />
            </MudPaper>
        }
        else
        {
            <MudPaper Elevation="0">
                <MudList Clickable="true">
                    @foreach (var topic in apiService.Topics)
                    {
                        <MudListItem >
                            <ChildContent>
                                <MudStack Row="true">
                                    <a class="topicNameText">@topic.Name</a>
                                    <a class="topicMessageCountText">@topic.Messages.Count()</a>
                                </MudStack>
                            </ChildContent>
                            <NestedList>
                                @foreach (var msg in topic.Messages)
                                {
                                    @if(messages.Any(s => s == msg.Name))
                                    {

                                        <MudListItem style="background-color: #c3d2f1;" IconSize="Size.Small" Icon="@Icons.Material.Filled.Check" Text="@msg.Name" @onclick="(e) => OpenAudio(msg.Name, msg.Link, topic.Server, topic.Messages)" />

                                    }
                                    else
                                    {
                                        <MudListItem Text="@msg.Name" @onclick="(e) => OpenAudio(msg.Name, msg.Link, topic.Server, topic.Messages)" />
                                    }
                                }
                            </NestedList>
                        </MudListItem>
                    }
                </MudList>
            </MudPaper>  
        }
        </MudCardContent>
</div>
@code
{
    string? dataReady;
    List<string>? messages;

    protected override async Task OnInitializedAsync()
    {
        await apiService.LoadData();
        await completedService.GetCompletedMessages("Topical");
        if(completedService.Completed?.Any() == true)
        {
            messages = new List<string>();
            foreach(var completed in completedService.Completed)
            {
                foreach(var m in completed.MessageTitles)
                {
                    messages.Add(m);
                }
            }
        }

        dataReady = "dataLoaded";

    }

    public void OpenAudio(string audioName, string audioLink, string serverName, List<Message> queue)
    {
        string serverPath = sharedDataService.GetServerPath(apiService.Servers, serverName);

        sharedDataService.AudioTitle = audioName;
        sharedDataService.AudioLink = Path.Combine(serverPath, audioLink);
        sharedDataService.AudioSeries = "Topical";
        sharedDataService.GenerateQueue(queue, audioName, serverPath);
        sharedDataService.TogglePlayer();
    }

    
}
